[
    {
        "id": "d1ba6dceafe1b689",
        "type": "tab",
        "label": "Modbus to MQTT Converter",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0f491977da734744",
        "type": "modbus-read",
        "z": "d1ba6dceafe1b689",
        "name": "READ HR",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "5",
        "rate": "2",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "2afc588b1d6f09d6",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 140,
        "wires": [
            [
                "c4abf1bea97ddfb5"
            ],
            []
        ]
    },
    {
        "id": "ca8a0f77ccb388fb",
        "type": "mqtt out",
        "z": "d1ba6dceafe1b689",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5cfc41ca871c1c8f",
        "x": 550,
        "y": 140,
        "wires": []
    },
    {
        "id": "0440e7ba6ec43f0a",
        "type": "debug",
        "z": "d1ba6dceafe1b689",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 200,
        "wires": []
    },
    {
        "id": "c4abf1bea97ddfb5",
        "type": "function",
        "z": "d1ba6dceafe1b689",
        "name": "function 2",
        "func": "// Input: msg.payload should be an array [442, 0, 440, 0, 0]\n\n// Define the base MQTT topic and starting index\nconst baseTopic = \"Holding Register - Modbus Slave Simulator Device\"; // Replace with your base MQTT topic\nconst startIndex = 0; // Replace with your desired starting index\n\n// Iterate through the array and publish each value to a unique topic with a custom index\nconst values = msg.payload;\nconst topics = values.map((value, index) => `${baseTopic}/HR${startIndex + index}`);\n   \nconst messages = values.map((value, index) => ({\n   topic: topics[index],\n   payload: value.toString(), // Convert the value to a string\n}));\n\nreturn [messages];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 180,
        "wires": [
            [
                "0440e7ba6ec43f0a",
                "ca8a0f77ccb388fb"
            ]
        ]
    },
    {
        "id": "2afc588b1d6f09d6",
        "type": "modbus-client",
        "name": "Node-RED Modbus Client",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "5cfc41ca871c1c8f",
        "type": "mqtt-broker",
        "name": "Node-RED MQTT Client",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]